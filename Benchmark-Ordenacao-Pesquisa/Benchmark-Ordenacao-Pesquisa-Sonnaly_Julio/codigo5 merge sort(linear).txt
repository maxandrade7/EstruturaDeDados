import time
import random

# Adicionar as funções de Ordenamento e Pesquisa.
def bubble_sort(lista):
    comps = 0
    trocas = 0
    for i in range(len(lista)):
        for c in range(i+1,len(lista)):
            comps+=1
            if(lista[c] < lista[i]):#trocar
                trocas+=1
                aux = lista[i]
                lista[i] = lista[c]
                lista[c] = aux
    print("COMP: %d"%(comps))
    print("TROCAS: %d"%(trocas))

    return lista

def bb(lista,x):

    ini = 0
    fim = len(lista)-1
    pos = -1
    cont = 0

    while(ini<=fim):
        meio = (ini+fim)//2
        cont+=1
        if(lista[meio]==x):
            pos = meio
            break
        elif(lista[meio]>x):
            cont+=1
            fim = meio-1
        else:
            cont+=1
            ini = meio+1

    print("CONT: %d"%(cont))
    return pos
        

def mergeSort(lista):
    if len(lista)>1:
        meio = len(lista)//2
        esquerda = lista[:meio]
        direita = lista[meio:]

        mergeSort(esquerda)
        mergeSort(direita)

        i=0
        j=0
        k=0
        while i < len(esquerda) and j < len(direita):
            if esquerda[i] < direita[j]:
                lista[k]=esquerda[i]
                i=i+1
            else:
                lista[k]=direita[j]
                j=j+1
            k=k+1

        while i < len(esquerda):
            lista[k]=esquerda[i]
            i=i+1
            k=k+1

        while j < len(direita):
            lista[k]=direita[j]
            j=j+1
            k=k+1


def pesquisaLinear(lista, elemento_desejado):
    comp = 0
    posicao = -1
    for item in lista:
        posicao = posicao + 1
        comp += 1
        if(item == elemento_desejado):
            break
    print("LINEAR_COMPS: %d"%(comp))

    return posicao

# Programa principal
def main():
    lista = list(range(1, 15000+1))
    random.shuffle(lista)

    inicio = time.time()
    print("Tempo inicial: %f"%(inicio))

    mergeSort(lista)

    fim = time.time()
    print("Tempo final: %f"%(fim))

    print("%f"%(fim-inicio))

    inicio = time.time()
    print("Tempo inicial: %f"%(inicio))

    posicao = pesquisaLinear(lista, 7500)
    print("Posição do item é %d"%(posicao))

    fim = time.time()
    print("Tempo final: %f"%(fim))

    tempoTotal = fim - inicio
    print("O tempo total foi %f"%(tempoTotal))

if (__name__ == "__main__"):
    main()
